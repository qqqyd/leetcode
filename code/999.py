"""
999. 车的可用捕获量
在一个 8 x 8 的棋盘上，有一个白色车（rook）。也可能有空方块，白色的象（bishop）和黑色的卒（pawn）。它们分别以字符 “R”，“.”，“B” 和 “p” 给出。大写字符表示白棋，小写字符表示黑棋。
车按国际象棋中的规则移动：它选择四个基本方向中的一个（北，东，西和南），然后朝那个方向移动，直到它选择停止、到达棋盘的边缘或移动到同一方格来捕获该方格上颜色相反的卒。另外，车不能与其他友方（白色）象进入同一个方格。
返回车能够在一次移动中捕获到的卒的数量。
输入
[[".",".",".",".",".",".",".","."],
 [".",".",".","p",".",".",".","."],
 [".",".",".","R",".",".",".","p"],
 [".",".",".",".",".",".",".","."],
 [".",".",".",".",".",".",".","."],
 [".",".",".","p",".",".",".","."],
 [".",".",".",".",".",".",".","."],
 [".",".",".",".",".",".",".","."]]
输出：3

我的思想：
题面意思，一步一步来

优解思想：

收获：

"""

def solution(board):
    # board: List[List[str]]
    res, sx, sy = 0
    direc = [[0, -1], [1, 0], [0, 1], [-1, 0]]
    for i in range(8):
        for j in range(8):
            if board[i][j] = 'R':
                sy, sx = i, j

    for dy, dx in direc:
        step = 0
        while True:
            ty, tx = sy + dy, sx + dx
            if tx < 0 or tx >= 8 or ty < 0 or ty >= 8 or board[tx][ty] == 'B':
                break
            if board[tx][ty] == 'p':
                res += 1
                break
            step += 1
    return res
    
def excellent():
    pass

if __name__ == '__main__':
    
    print(solution())
